# -*- coding: utf-8 -*-
"""TD1_pandas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zffoqLLWKkfTdW2YfLbuYb-ZXrpWS-FW

# TD 1 (SAE 5.01) Répondez aux questions qui se trouvent dans les cellules en ajoutant le code ci-dessous.

## 0) Contrôler si les bibliothèques pandas sont installées (lancer la cellule ci-dessous)
"""

# Commented out IPython magic to ensure Python compatibility.
#code pour l'installation du package pandas
# %pip install pandas

import os
import pandas as pd

"""## 1) Utiliser pandas pour lire les fichier csv UsedCarDataset.csv qui vous devrez importer dans l'espace de travail. Vous devez en suite le charger dans un objet DataFrame."""

parcoursDonnee = os.path.join("DATA", "UsedCarDataset.csv")
dataFrameVoitures = pd.read_csv(parcoursDonnee)
dataFrameVoitures

"""## 2) Imprimer un aperçu du DataFrame"""

dataFrameVoitures.head()

"""## 3) Sauvegarder dans une variable la colonne max_power(bhp) du DataFrame"""

variable = dataFrameVoitures['max_power(bhp)']
variable

"""## 4) Imprimer le type de la variable créée à l'étape précédente, de quel type il s'agit ?"""

type(dataFrameVoitures)

"""## 5) Imprimer les type des données qui se trouvent dans la variable créée à l'étape précédente, de quel type il s'agit ?"""

dataFrameVoitures.dtypes

"""## 6) En une seule ligne de code, transformer les données dans la variable créée à l'étape précé

```
# Ce texte est au format code
```

dente (4)  en hp (1 bhp = 0.986319999999946 hp)
"""

dataFrameVoitures['max_power(bhp)'].mul(0.986319999999946)

"""## 7) Ajouter la colonne qui contien les valeurs de puissance en hp dans le dataframe"""

dataFrameVoitures['max_power(bhp)'] = dataFrameVoitures['max_power(bhp)'].mul(0.986319999999946)
dataFrameVoitures.head()

"""## 8) Trier les éléments (voitures) du DataFrame (chaque voiture se trouve dans une ligne séparée) en ordre décroissant, selon leur puissance (en hp).  """

dataFrameVoitures.sort_values(by='max_power(hp)')

"""## 9) Eliminer les voitures qui ont des valeurs NaN (Not a number) dans le

1.   Élément de liste
2.   Élément de liste

dataframe crée à l'étape precedente
"""

dataFrameVoitures.dropna()